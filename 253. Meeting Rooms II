 class Solution:
    def minMeetingRooms(self, intervals: List[List[int]]) -> int:
        
  # 1.heap
        intervals.sort(key = lambda x: x[0])
        heap = []
        for i in range(len(intervals)):
            if heap and intervals[i][0] >= heap[0]:
                heapq.heapreplace(heap, intervals[i][1])
            else:
                heapq.heappush(heap, intervals[i][1])
        return len(heap)
        
# 2.sort
         used_room = 0
         start_time = sorted(i[0] for i in intervals)
         end_time = sorted(i[1] for i in intervals)
         print (start_time, end_time)
         start_p = 0
         end_p = 0
         for start_p in range(len(intervals)):
             if start_time[start_p] >= end_time[end_p]:   
                 end_p += 1
             else:
                 used_room += 1
              
         return used_room
